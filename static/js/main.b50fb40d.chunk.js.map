{"version":3,"sources":["components/AppStyled.js","components/section/SectionStyled.js","components/section/Sections.js","components/feedbackOptions/FeedbackOptionsStyled.js","components/feedbackOptions/FeedbackOptions.js","components/statistics/StatisticsStyle.js","components/statistics/Statistics.js","components/notification/NotificationStyled.js","components/notification/Notification.js","components/App.js","index.js"],"names":["Container","styled","div","Sect","section","Section","title","children","className","Button","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","onClick","type","data-name","toUpperCase","slice","uuidv4","StList","ul","Statistics","good","neutral","bad","total","positivePercentage","props","P","p","Notification","message","App","state","increment","e","name","target","dataset","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","percent","Component","ReactDOM","render","document","getElementById"],"mappings":"8fACA,IAWeA,EAXGC,IAAOC,IAAV,K,wNCCf,IAWeC,EAXFF,IAAOG,QAAV,KCeKC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,eAAC,EAAD,WACE,oBAAIC,UAAU,QAAd,SAAuBF,IACtBC,M,gdCLP,IAuBeE,EAvBAR,IAAOS,OAAV,K,QCqBGC,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,cAAC,EAAD,CACET,UAAU,eACVU,QAASL,EACTM,KAAK,SAELC,YAAWH,EALb,SAOGA,EAAK,GAAGI,cAAgBJ,EAAKK,MAAM,IAH/BC,qB,wVCXf,IAiBeC,EAjBAvB,IAAOwB,GAAV,KCsBGC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAQ,CAAEL,OAAMC,UAASC,OAC/B,OACE,eAAC,EAAD,WAIGf,OAAOC,KAAKiB,GAAOhB,KAAI,SAACC,GAAD,OACtB,qBAAIT,UAAU,cAAd,UACGS,EAAK,GAAGI,cAAgBJ,EAAKK,MAAM,GADtC,IAC0C,+BAAOU,EAAMf,OADtBA,MAInC,qBAAIT,UAAU,cAAd,oBAAoCsB,KACpC,qBAAItB,UAAU,cAAd,kCACwBuB,EADxB,Y,2FCfN,IAIeE,EAJLhC,IAAOiC,EAAV,KCMQC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAAC,EAAD,UAAIA,KCEQC,E,4MACnBC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,UAAY,SAACC,GACX,IAAMC,EAAOD,EAAEE,OAAOC,QAAQF,KAC9B,EAAKG,UAAS,SAACN,GAAD,sBACXG,EAAOH,EAAMG,GAAQ,O,EAG1BI,mBAAqB,WAAO,IAAD,EACM,EAAKP,MACpC,OAFyB,EACjBX,KADiB,EACXC,QADW,EACFC,K,EAIzBiB,gCAAkC,WAAO,IAC/BnB,EAAS,EAAKW,MAAdX,KACR,OAAOoB,KAAKC,MAAc,IAAPrB,EAAc,EAAKkB,uB,uDAItC,IAAMf,EAAQmB,KAAKJ,qBACbK,EAAUD,KAAKH,kCACrB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASxC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAASqC,KAAKX,MACdzB,gBAAiBoC,KAAKV,cAI1B,cAAC,EAAD,CAASjC,MAAM,aAAf,SACa,IAAVwB,EACC,cAAC,EAAD,CAAcM,QAAQ,sBAEtB,cAAC,EAAD,2BACMa,KAAKX,OADX,IAOER,MAAOA,EACPC,mBAAoBmB,c,GA/CDC,a,MCFjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b50fb40d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 2px solid black;\r\n  padding: 20px;\r\n  width: 400px;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nconst Sect = styled.section`\r\n  &:not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n  .title {\r\n    margin-bottom: 25px;\r\n    font-size: 26px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport default Sect;\r\n","import Proptypes from \"prop-types\";\r\nimport Sect from \"./SectionStyled\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <Sect>\r\n      <h2 className=\"title\">{title}</h2>\r\n      {children}\r\n    </Sect>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  children: Proptypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  outline: none;\r\n  border-radius: 20px;\r\n  border-bottom: solid 1px #563456;\r\n  min-width: 80px;\r\n  height: 40px;\r\n  padding: 10px;\r\n  background-color: silver;\r\n  color: black;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  &:not(:last-child) {\r\n    margin-right: 15px;\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  &:active {\r\n    transform: translateY(1px);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"./FeedbackOptionsStyled\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map((item) => (\r\n        <Button\r\n          className=\"feedback-btn\"\r\n          onClick={onLeaveFeedback}\r\n          type=\"button\"\r\n          key={uuidv4()}\r\n          data-name={item}\r\n        >\r\n          {item[0].toUpperCase() + item.slice(1)}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst StList = styled.ul`\r\n  .stList_item {\r\n    text-align: center;\r\n    border: 2px solid black;\r\n    border-radius: 20px;\r\n    margin: 25px;\r\n    color: fffff;\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    padding: 10px;\r\n    margin-right: 15px;\r\n  }\r\n  :hover {\r\n    color: blueviolet;\r\n  }\r\n`;\r\n\r\nexport default StList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StList from \"./StatisticsStyle\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const props = { good, neutral, bad };\r\n  return (\r\n    <StList>\r\n      {/* <li className=\"stList_item\">Good: {good}</li>\r\n      <li className=\"stList_item\">Bad: {neutral}</li>\r\n      <li className=\"stList_item\">Bad: {bad}</li> */}\r\n      {Object.keys(props).map((item) => (\r\n        <li className=\"stList_item\" key={item}>\r\n          {item[0].toUpperCase() + item.slice(1)}:<span>{props[item]}</span>\r\n        </li>\r\n      ))}\r\n      <li className=\"stList_item\">Total: {total}</li>\r\n      <li className=\"stList_item\">\r\n        Positive Percentage: {positivePercentage} %\r\n      </li>\r\n    </StList>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positiveFeedback: PropTypes.number,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst P = styled.p`\r\n  font-size: 28px;\r\n`;\r\n\r\nexport default P;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport P from \"./NotificationStyled\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <P>{message}</P>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\nimport Container from \"./AppStyled\";\nimport Section from \"./section/Sections\";\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\nimport Statistics from \"./statistics/Statistics\";\nimport Notification from \"./notification/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  increment = (e) => {\n    const name = e.target.dataset.name;\n    this.setState((state) => ({\n      [name]: state[name] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.floor((good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const percent = this.countPositiveFeedbackPercentage();\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.increment}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              {...this.state}\n              // good={this.good}\n              // neutral={this.neutral}\n              // bad={this.bad}\n              // ось тут ми також можемо викликати метод total\n              // total={this.total()}\n              total={total}\n              positivePercentage={percent}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}